--ThatNomerr, HazelN's Scripts--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 6) then
			v23 = nil;
			v23 = function(v25, v26, ...)
				local v35 = 0;
				local v36;
				local v37;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v35 == 0) then
						v36 = 0;
						v37 = nil;
						v38 = nil;
						v39 = nil;
						v35 = 1;
					end
					if (v35 == 2) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v47 = nil;
						v35 = 3;
					end
					if (v35 == 1) then
						v40 = nil;
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v35 = 2;
					end
					if (v35 == 3) then
						v48 = nil;
						while true do
							local v51 = 0;
							while true do
								if (v51 == 0) then
									if (v36 == 0) then
										local v53 = 0;
										while true do
											if (2 == v53) then
												v36 = 1;
												break;
											end
											if (v53 == 1) then
												v25 = v12(v11(v25, 5), v7("\198\51", "\232\29\179\161"), function(v59)
													if (v9(v59, 2 + 0) == (3 + 76)) then
														local v105 = 0;
														local v106;
														while true do
															if (v105 == 0) then
																v106 = 0;
																while true do
																	if (v106 == 0) then
																		local v123 = 0;
																		while true do
																			if (v123 == 0) then
																				v38 = v8(v11(v59, 368 - (165 + (1178 - (546 + 430))), 2 - 1));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v107 = 0;
														local v108;
														local v109;
														while true do
															if (v107 == 1) then
																while true do
																	if (v108 == 0) then
																		v109 = v10(v8(v59, (11 - 6) + 5 + 6));
																		if v38 then
																			local v141 = 0;
																			local v142;
																			local v143;
																			while true do
																				if (1 == v141) then
																					while true do
																						local v170 = 0;
																						while true do
																							if (v170 == 0) then
																								if (v142 == 0) then
																									local v175 = 0;
																									while true do
																										if (1 == v175) then
																											v142 = 1;
																											break;
																										end
																										if (v175 == 0) then
																											v143 = v13(v109, v38);
																											v38 = nil;
																											v175 = 1;
																										end
																									end
																								end
																								if (v142 == 1) then
																									return v143;
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (0 == v141) then
																					v142 = 0;
																					v143 = nil;
																					v141 = 1;
																				end
																			end
																		else
																			return v109;
																		end
																		break;
																	end
																end
																break;
															end
															if (0 == v107) then
																v108 = 0;
																v109 = nil;
																v107 = 1;
															end
														end
													end
												end);
												v39 = nil;
												v53 = 2;
											end
											if (v53 == 0) then
												v37 = 1930 - (1192 + (1826 - 1089));
												v38 = nil;
												v53 = 1;
											end
										end
									end
									if (v36 == 3) then
										local v54 = 0;
										while true do
											if (v54 == 1) then
												v44 = function(v60)
													local v67 = 0;
													local v68;
													local v69;
													local v70;
													while true do
														if (0 == v67) then
															v68 = 0 - 0;
															v69 = nil;
															v67 = 1;
														end
														if (1 == v67) then
															v70 = nil;
															while true do
																local v116 = 0;
																while true do
																	if (v116 == 0) then
																		if ((1 + 0) == v68) then
																			local v126 = 0;
																			while true do
																				if (v126 == 0) then
																					v69 = v11(v25, v37, (v37 + v60) - 1);
																					v37 = v37 + v60;
																					v126 = 1;
																				end
																				if (v126 == 1) then
																					v68 = 2;
																					break;
																				end
																			end
																		end
																		if (v68 == 2) then
																			local v127 = 0;
																			while true do
																				if (v127 == 1) then
																					v68 = 1 + 2;
																					break;
																				end
																				if (v127 == 0) then
																					v70 = {};
																					for v148 = 1 + 0 + 0, #v69 do
																						v70[v148] = v10(v9(v11(v69, v148, v148)));
																					end
																					v127 = 1;
																				end
																			end
																		end
																		v116 = 1;
																	end
																	if (v116 == 1) then
																		if (v68 == (1308 - (1210 + 95))) then
																			return v14(v70);
																		end
																		if (v68 == 0) then
																			local v128 = 0;
																			while true do
																				if (1 == v128) then
																					v68 = 1;
																					break;
																				end
																				if (v128 == 0) then
																					v69 = nil;
																					if not v60 then
																						local v171 = 0;
																						local v172;
																						while true do
																							if (v171 == 0) then
																								v172 = 0 - 0;
																								while true do
																									if (v172 == (0 + 0)) then
																										v60 = v42();
																										if (v60 == 0) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v128 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v45 = v42;
												v54 = 2;
											end
											if (v54 == 0) then
												v43 = function()
													local v71 = 0;
													local v72;
													local v73;
													local v74;
													local v75;
													local v76;
													local v77;
													local v78;
													while true do
														if (v71 == 1) then
															v74 = nil;
															v75 = nil;
															v71 = 2;
														end
														if (v71 == 3) then
															v78 = nil;
															while true do
																local v117 = 0;
																while true do
																	if (1 == v117) then
																		if (v72 == 2) then
																			local v129 = 0;
																			while true do
																				if (v129 == 1) then
																					v72 = 3 + 0;
																					break;
																				end
																				if (0 == v129) then
																					v77 = v39(v74, 21, (165 + 1392) - ((1338 - 922) + 707 + 403));
																					v78 = ((v39(v74, 103 - 71) == ((237 + 275) - (64 + 447))) and -(2 - 1)) or 1;
																					v129 = 1;
																				end
																			end
																		end
																		if (v72 == 3) then
																			local v130 = 0;
																			while true do
																				if (v130 == 0) then
																					if (v77 == ((0 - 0) - (0 - 0))) then
																						if (v76 == (0 - 0)) then
																							return v78 * (0 - 0);
																						else
																							local v173 = 0;
																							local v174;
																							while true do
																								if (v173 == 0) then
																									v174 = 0;
																									while true do
																										if (0 == v174) then
																											v77 = 1 + 0;
																											v75 = 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v77 == 2047) then
																						return ((v76 == ((0 + 0) - (0 - 0))) and (v78 * ((1 - 0) / (0 + 0 + 0)))) or (v78 * NaN);
																					end
																					return v16(v78, v77 - 1023) * (v75 + (v76 / ((4 - 2) ^ (72 - (11 + 9)))));
																				end
																			end
																		end
																		break;
																	end
																	if (v117 == 0) then
																		if (v72 == 0) then
																			local v131 = 0;
																			while true do
																				if (v131 == 0) then
																					v73 = v42();
																					v74 = v42();
																					v131 = 1;
																				end
																				if (v131 == 1) then
																					v72 = 3 - 2;
																					break;
																				end
																			end
																		end
																		if (v72 == 1) then
																			local v132 = 0;
																			while true do
																				if (0 == v132) then
																					v75 = 1;
																					v76 = (v39(v74, 1 + 0 + 0, 8 + 12) * ((2 + (1647 - (1609 + 38))) ^ ((173 + 30 + 950) - (772 + 349)))) + v73;
																					v132 = 1;
																				end
																				if (1 == v132) then
																					v72 = 2;
																					break;
																				end
																			end
																		end
																		v117 = 1;
																	end
																end
															end
															break;
														end
														if (v71 == 2) then
															v76 = nil;
															v77 = nil;
															v71 = 3;
														end
														if (v71 == 0) then
															v72 = 0;
															v73 = nil;
															v71 = 1;
														end
													end
												end;
												v44 = nil;
												v54 = 1;
											end
											if (v54 == 2) then
												v36 = 4;
												break;
											end
										end
									end
									v51 = 1;
								end
								if (v51 == 2) then
									if (v36 == 4) then
										local v55 = 0;
										while true do
											if (v55 == 0) then
												v46 = nil;
												v46 = function(...)
													return {...}, v20("#", ...);
												end;
												v55 = 1;
											end
											if (v55 == 2) then
												v36 = 5;
												break;
											end
											if (v55 == 1) then
												v47 = nil;
												v47 = function()
													local v79 = 0;
													local v80;
													local v81;
													local v82;
													local v83;
													local v84;
													local v85;
													local v86;
													while true do
														if (v79 == 0) then
															v80 = 0;
															v81 = nil;
															v79 = 1;
														end
														if (v79 == 2) then
															v84 = nil;
															v85 = nil;
															v79 = 3;
														end
														if (v79 == 1) then
															v82 = nil;
															v83 = nil;
															v79 = 2;
														end
														if (v79 == 3) then
															v86 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		if (v80 == 0) then
																			local v133 = 0;
																			while true do
																				if (v133 == 1) then
																					v83 = {};
																					v84 = {v81,v82,nil,v83};
																					v133 = 2;
																				end
																				if (v133 == 2) then
																					v80 = 1;
																					break;
																				end
																				if (v133 == 0) then
																					v81 = {};
																					v82 = {};
																					v133 = 1;
																				end
																			end
																		end
																		if (v80 == 1) then
																			local v134 = 0;
																			while true do
																				if (v134 == 0) then
																					v85 = v42();
																					v86 = {};
																					v134 = 1;
																				end
																				if (v134 == 1) then
																					for v150 = 1 + 0, v85 do
																						local v151 = 0;
																						local v152;
																						local v153;
																						local v154;
																						while true do
																							if (v151 == 0) then
																								v152 = 0;
																								v153 = nil;
																								v151 = 1;
																							end
																							if (v151 == 1) then
																								v154 = nil;
																								while true do
																									if (v152 == 0) then
																										local v176 = 0;
																										while true do
																											if (v176 == 0) then
																												v153 = v40();
																												v154 = nil;
																												v176 = 1;
																											end
																											if (v176 == 1) then
																												v152 = 1;
																												break;
																											end
																										end
																									end
																									if (v152 == 1) then
																										if (v153 == ((1783 - (876 + 906)) + 0)) then
																											v154 = v40() ~= 0;
																										elseif (v153 == 2) then
																											v154 = v43();
																										elseif (v153 == (1678 - (1248 + 427))) then
																											v154 = v44();
																										end
																										v86[v150] = v154;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v84[(1 - 0) + 2] = v40();
																					v134 = 2;
																				end
																				if (2 == v134) then
																					v80 = 2;
																					break;
																				end
																			end
																		end
																		v118 = 1;
																	end
																	if (v118 == 1) then
																		if (v80 == 2) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					for v155 = 1 + 0, v42() do
																						local v156 = 0;
																						local v157;
																						local v158;
																						while true do
																							if (v156 == 0) then
																								v157 = 0;
																								v158 = nil;
																								v156 = 1;
																							end
																							if (v156 == 1) then
																								while true do
																									if (0 == v157) then
																										v158 = v40();
																										if (v39(v158, 1, 1 + (807 - (337 + 470))) == (1204 - (1059 + 91 + 54))) then
																											local v181 = 0;
																											local v182;
																											local v183;
																											local v184;
																											local v185;
																											while true do
																												if (v181 == 0) then
																													v182 = 0;
																													v183 = nil;
																													v181 = 1;
																												end
																												if (v181 == 2) then
																													while true do
																														if (v182 == 2) then
																															local v200 = 0;
																															while true do
																																if (v200 == 1) then
																																	v182 = 3;
																																	break;
																																end
																																if (v200 == 0) then
																																	if (v39(v184, 1 - (0 + 0), 1 - 0) == (567 - (553 + 9 + 4))) then
																																		v185[2] = v86[v185[(1 + 5) - (4 + 0)]];
																																	end
																																	if (v39(v184, 2, 2) == (1883 - (184 + 1698))) then
																																		v185[4 - 1] = v86[v185[3 + 0]];
																																	end
																																	v200 = 1;
																																end
																															end
																														end
																														if (v182 == 0) then
																															local v201 = 0;
																															while true do
																																if (v201 == 1) then
																																	v182 = 1;
																																	break;
																																end
																																if (v201 == 0) then
																																	v183 = v39(v158, 2, 92 - ((840 - (744 + 58)) + 51));
																																	v184 = v39(v158, (1746 + 84) - (1673 + (910 - (199 + 558))), 1 + 5);
																																	v201 = 1;
																																end
																															end
																														end
																														if (v182 == 1) then
																															local v202 = 0;
																															while true do
																																if (v202 == 0) then
																																	v185 = {v41(),v41(),nil,nil};
																																	if (v183 == ((0 + 0) - 0)) then
																																		local v217 = 0;
																																		local v218;
																																		while true do
																																			if (0 == v217) then
																																				v218 = 0;
																																				while true do
																																					if (v218 == 0) then
																																						v185[1809 - ((2223 - (537 + 980)) + (2457 - (1093 + 264)))] = v41();
																																						v185[1 + 3] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v183 == 1) then
																																		v185[(1235 - (915 + 317)) + (0 - 0)] = v42();
																																	elseif (v183 == (3 - 1)) then
																																		v185[(9 - 4) - 2] = v42() - ((6 - 4) ^ ((1404 - (471 + 892)) - (74 - 49)));
																																	elseif (v183 == (5 - 2)) then
																																		local v226 = 0;
																																		local v227;
																																		while true do
																																			if (v226 == 0) then
																																				v227 = 0;
																																				while true do
																																					if (v227 == 0) then
																																						v185[1 + 2] = v42() - (((349 - (217 + 128)) - 2) ^ 16);
																																						v185[1173 - ((462 - 180) + 660 + 227)] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v202 = 1;
																																end
																																if (1 == v202) then
																																	v182 = 2;
																																	break;
																																end
																															end
																														end
																														if (v182 == 3) then
																															if (v39(v184, 864 - (645 + 216), 257 - (192 + 62)) == 1) then
																																v185[1585 - (242 + 1339)] = v86[v185[11 - 7]];
																															end
																															v81[v155] = v185;
																															break;
																														end
																													end
																													break;
																												end
																												if (v181 == 1) then
																													v184 = nil;
																													v185 = nil;
																													v181 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					for v159 = 1854 - (1012 + 841), v42() do
																						v82[v159 - 1] = v47();
																					end
																					v135 = 1;
																				end
																				if (v135 == 1) then
																					for v161 = 1, v42() do
																						v83[v161] = v42();
																					end
																					return v84;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v55 = 2;
											end
										end
									end
									if (v36 == 2) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v42 = function()
													local v87 = 0;
													local v88;
													local v89;
													local v90;
													local v91;
													local v92;
													while true do
														if (v87 == 2) then
															v92 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		if (1 == v88) then
																			return (v92 * (3640433 + (4741545 - (714 + 199)) + 8396151)) + (v91 * ((16929 + 14181 + (35954 - (987 + 380))) - ((120 - 24) + 18 + 24 + (41 - 18)))) + (v90 * (1353 - (1027 + 70))) + v89;
																		end
																		if (v88 == (1515 - (1325 + 190))) then
																			local v136 = 0;
																			while true do
																				if (v136 == 1) then
																					v88 = 643 - (506 + 136);
																					break;
																				end
																				if (v136 == 0) then
																					v89, v90, v91, v92 = v9(v25, v37, v37 + (1515 - (1489 + 24 + 1)) + 2);
																					v37 = v37 + ((4 + 6) - (21 - 15));
																					v136 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v87 == 1) then
															v90 = nil;
															v91 = nil;
															v87 = 2;
														end
														if (v87 == 0) then
															v88 = 0;
															v89 = nil;
															v87 = 1;
														end
													end
												end;
												v43 = nil;
												v56 = 2;
											end
											if (0 == v56) then
												v41 = function()
													local v93 = 0;
													local v94;
													local v95;
													local v96;
													while true do
														if (0 == v93) then
															v94 = 0;
															v95 = nil;
															v93 = 1;
														end
														if (v93 == 1) then
															v96 = nil;
															while true do
																local v120 = 0;
																while true do
																	if (0 == v120) then
																		if (1 == v94) then
																			return (v96 * (((2854 - (671 + 494)) - (1199 + 419 + 15)) + 200)) + v95;
																		end
																		if (v94 == (0 + 0)) then
																			local v137 = 0;
																			while true do
																				if (0 == v137) then
																					v95, v96 = v9(v25, v37, v37 + (792 - (758 + 32)));
																					v37 = v37 + 2 + 0;
																					v137 = 1;
																				end
																				if (1 == v137) then
																					v94 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v42 = nil;
												v56 = 1;
											end
											if (v56 == 2) then
												v36 = 3;
												break;
											end
										end
									end
									break;
								end
								if (v51 == 1) then
									if (v36 == 1) then
										local v57 = 0;
										while true do
											if (v57 == 2) then
												v36 = 2;
												break;
											end
											if (v57 == 0) then
												v39 = function(v61, v62, v63)
													if v63 then
														local v110 = 0;
														local v111;
														local v112;
														while true do
															if (v110 == 0) then
																v111 = 0;
																v112 = nil;
																v110 = 1;
															end
															if (v110 == 1) then
																while true do
																	if (v111 == (0 + 0)) then
																		local v124 = 0;
																		while true do
																			if (v124 == 0) then
																				v112 = (v61 / (((6469 - 4801) - ((1670 - (459 + 815)) + 1270)) ^ (v62 - (1 - 0)))) % (2 ^ (((v63 - (2 - 1)) - (v62 - ((1906 - (1412 + 79)) - ((936 - ((1766 - (1130 + 298)) + 448)) + 226 + 38)))) + 1 + 0));
																				return v112 - (v112 % (1 + 0 + ((0 + 0) - (1660 - (1320 + 340)))));
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v113 = 0;
														local v114;
														local v115;
														while true do
															if (v113 == 0) then
																v114 = 0;
																v115 = nil;
																v113 = 1;
															end
															if (v113 == 1) then
																while true do
																	if ((406 - (252 + 154)) == v114) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v115 = 2 ^ (v62 - (1 + 0));
																				return (((v61 % (v115 + v115)) >= v115) and ((2 - 1) + 0)) or 0;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
												end;
												v40 = nil;
												v57 = 1;
											end
											if (v57 == 1) then
												v40 = function()
													local v97 = 0;
													local v98;
													local v99;
													while true do
														if (v97 == 0) then
															v98 = 0;
															v99 = nil;
															v97 = 1;
														end
														if (v97 == 1) then
															while true do
																local v121 = 0;
																while true do
																	if (0 == v121) then
																		if ((3 - 2) == v98) then
																			return v99;
																		end
																		if (0 == v98) then
																			local v138 = 0;
																			while true do
																				if (v138 == 0) then
																					v99 = v9(v25, v37, v37);
																					v37 = v37 + ((2 + 1) - (2 + 0));
																					v138 = 1;
																				end
																				if (1 == v138) then
																					v98 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v41 = nil;
												v57 = 2;
											end
										end
									end
									if (v36 == 5) then
										local v58 = 0;
										while true do
											if (1 == v58) then
												return v48(v47(), {}, v26)(...);
											end
											if (v58 == 0) then
												v48 = nil;
												v48 = function(v64, v65, v66)
													local v100 = 0;
													local v101;
													local v102;
													local v103;
													local v104;
													while true do
														if (0 == v100) then
															v101 = 0;
															v102 = nil;
															v100 = 1;
														end
														if (v100 == 2) then
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (1 == v101) then
																			local v139 = 0;
																			while true do
																				if (v139 == 0) then
																					v104 = v64[3];
																					return function(...)
																						local v163 = 0;
																						local v164;
																						local v165;
																						local v166;
																						local v167;
																						local v168;
																						local v169;
																						while true do
																							if (1 == v163) then
																								v166 = nil;
																								v167 = nil;
																								v163 = 2;
																							end
																							if (3 == v163) then
																								while true do
																									if (v164 == 0) then
																										local v178 = 0;
																										while true do
																											if (v178 == 0) then
																												v165 = 1;
																												v166 = -1;
																												v178 = 1;
																											end
																											if (v178 == 1) then
																												v164 = 1;
																												break;
																											end
																										end
																									end
																									if (v164 == 1) then
																										local v179 = 0;
																										while true do
																											if (v179 == 1) then
																												v164 = 2;
																												break;
																											end
																											if (v179 == 0) then
																												v167 = {...};
																												v168 = v20("#", ...) - (1 + 0);
																												v179 = 1;
																											end
																										end
																									end
																									if (v164 == 2) then
																										local v180 = 0;
																										while true do
																											if (v180 == 0) then
																												v169 = nil;
																												v169 = function()
																													local v189 = 0;
																													local v190;
																													local v191;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													while true do
																														if (0 == v189) then
																															v190 = v102;
																															v191 = v103;
																															v192 = v104;
																															v189 = 1;
																														end
																														if (3 == v189) then
																															v198 = nil;
																															v199 = nil;
																															while true do
																																local v204 = 0;
																																local v205;
																																while true do
																																	if (v204 == 0) then
																																		v205 = 0;
																																		while true do
																																			if (v205 == 0) then
																																				local v219 = 0;
																																				while true do
																																					if (v219 == 1) then
																																						v205 = 1;
																																						break;
																																					end
																																					if (v219 == 0) then
																																						v198 = v190[v165];
																																						v199 = v198[2 - 1];
																																						v219 = 1;
																																					end
																																				end
																																			end
																																			if (v205 == 1) then
																																				if (v199 <= 25) then
																																					if (v199 <= 12) then
																																						if (v199 <= 5) then
																																							if (v199 <= 2) then
																																								if (v199 <= (0 + 0)) then
																																									local v228 = 0;
																																									local v229;
																																									local v230;
																																									local v231;
																																									local v232;
																																									while true do
																																										if (v228 == 2) then
																																											while true do
																																												if (v229 == 1) then
																																													v232 = 0 + (0 - 0);
																																													for v366 = v230, v198[(32 - 17) - (25 - 14)] do
																																														local v367 = 0;
																																														local v368;
																																														while true do
																																															if (v367 == 0) then
																																																v368 = 0;
																																																while true do
																																																	if (0 == v368) then
																																																		v232 = v232 + (1853 - (656 + 1196));
																																																		v196[v366] = v231[v232];
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																												if (v229 == 0) then
																																													local v359 = 0;
																																													while true do
																																														if (v359 == 0) then
																																															v230 = v198[4 - 2];
																																															v231 = {v196[v230](v196[v230 + 1])};
																																															v359 = 1;
																																														end
																																														if (v359 == 1) then
																																															v229 = 1;
																																															break;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v228 == 0) then
																																											v229 = 0;
																																											v230 = nil;
																																											v228 = 1;
																																										end
																																										if (v228 == 1) then
																																											v231 = nil;
																																											v232 = nil;
																																											v228 = 2;
																																										end
																																									end
																																								elseif (v199 > ((1927 - (1805 + 121)) + (0 - 0))) then
																																									local v260 = 0;
																																									local v261;
																																									local v262;
																																									while true do
																																										if (v260 == 1) then
																																											while true do
																																												if (0 == v261) then
																																													v262 = v198[8 - 6];
																																													v196[v262] = v196[v262](v21(v196, v262 + 1, v198[6 - 3]));
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v260 == 0) then
																																											v261 = 0;
																																											v262 = nil;
																																											v260 = 1;
																																										end
																																									end
																																								else
																																									for v352 = v198[3 - 1], v198[(1 - 0) + (5 - 3)] do
																																										v196[v352] = nil;
																																									end
																																								end
																																							elseif (v199 <= 3) then
																																								v196[v198[2]] = v198[(4 - 3) + (910 - (266 + 642))] ~= (0 - (0 + 0));
																																							elseif (v199 == 4) then
																																								local v263 = 0;
																																								local v264;
																																								local v265;
																																								local v266;
																																								local v267;
																																								while true do
																																									if (v263 == 2) then
																																										while true do
																																											if (v264 == 1) then
																																												v267 = v196[v265 + 2 + 0];
																																												if (v267 > 0) then
																																													if (v266 > v196[v265 + 1]) then
																																														v165 = v198[(2712 - (464 + 928)) - (1280 + 37)];
																																													else
																																														v196[v265 + 3 + 0] = v266;
																																													end
																																												elseif (v266 < v196[v265 + (1852 - (868 + 983))]) then
																																													v165 = v198[3];
																																												else
																																													v196[v265 + (1196 - (676 + 517))] = v266;
																																												end
																																												break;
																																											end
																																											if (v264 == 0) then
																																												local v379 = 0;
																																												while true do
																																													if (v379 == 0) then
																																														v265 = v198[(7 - 5) + (955 - (376 + 579))];
																																														v266 = v196[v265];
																																														v379 = 1;
																																													end
																																													if (v379 == 1) then
																																														v264 = 1;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (0 == v263) then
																																										v264 = 0;
																																										v265 = nil;
																																										v263 = 1;
																																									end
																																									if (v263 == 1) then
																																										v266 = nil;
																																										v267 = nil;
																																										v263 = 2;
																																									end
																																								end
																																							else
																																								v65[v198[2 + 1]] = v196[v198[1951 - ((1514 - (319 + 252)) + (3437 - 2431))]];
																																							end
																																						elseif (v199 <= ((1341 - (23 + 256)) - (729 + 136 + 189))) then
																																							if (v199 <= (1 + 5)) then
																																								v196[v198[(3 - 2) + 1]] = v196[v198[156 - (46 + 107)]] - v198[4];
																																							elseif (v199 == (7 + 0)) then
																																								v196[v198[2 + (0 - 0)]]();
																																							elseif (v196[v198[(6 - 4) - 0]] == v198[1338 - (80 + 1254)]) then
																																								v165 = v165 + ((1 - 0) - 0);
																																							else
																																								v165 = v198[1171 - (528 + 434 + 206)];
																																							end
																																						elseif (v199 <= 10) then
																																							if (v199 == (2 + 7)) then
																																								local v270 = 0;
																																								local v271;
																																								local v272;
																																								while true do
																																									if (v270 == 0) then
																																										v271 = 0;
																																										v272 = nil;
																																										v270 = 1;
																																									end
																																									if (v270 == 1) then
																																										while true do
																																											if (v271 == 0) then
																																												v272 = v198[292 - (64 + (572 - 346))];
																																												v196[v272] = v196[v272]();
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								local v273 = 0;
																																								local v274;
																																								local v275;
																																								while true do
																																									if (v273 == 1) then
																																										while true do
																																											if (v274 == 0) then
																																												v275 = v198[2];
																																												v196[v275] = v196[v275](v196[v275 + (3 - 2)]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v273 == 0) then
																																										v274 = 0;
																																										v275 = nil;
																																										v273 = 1;
																																									end
																																								end
																																							end
																																						elseif (v199 == 11) then
																																							local v276 = 0;
																																							local v277;
																																							local v278;
																																							while true do
																																								if (v276 == 0) then
																																									v277 = 0;
																																									v278 = nil;
																																									v276 = 1;
																																								end
																																								if (v276 == 1) then
																																									while true do
																																										if (v277 == 0) then
																																											v278 = v198[2 + 0];
																																											v196[v278](v196[v278 + 1]);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v196[v198[1717 - (1506 + 209)]] = v196[v198[1377 - (474 + (3129 - 2229))]] + v196[v198[4]];
																																						end
																																					elseif (v199 <= (944 - (221 + 705))) then
																																						if (v199 <= (33 - (188 - (40 + 130)))) then
																																							if (v199 <= (685 - ((211 - 131) + 592))) then
																																								local v235 = 0;
																																								local v236;
																																								local v237;
																																								local v238;
																																								while true do
																																									if (v235 == 1) then
																																										v238 = nil;
																																										while true do
																																											if (v236 == 1) then
																																												for v369 = 2 - 1, #v195 do
																																													local v370 = 0;
																																													local v371;
																																													local v372;
																																													while true do
																																														if (0 == v370) then
																																															v371 = 0;
																																															v372 = nil;
																																															v370 = 1;
																																														end
																																														if (v370 == 1) then
																																															while true do
																																																if (v371 == 0) then
																																																	v372 = v195[v369];
																																																	for v462 = 0 + 0, #v372 do
																																																		local v463 = 0;
																																																		local v464;
																																																		local v465;
																																																		local v466;
																																																		local v467;
																																																		while true do
																																																			if (v463 == 0) then
																																																				v464 = 0;
																																																				v465 = nil;
																																																				v463 = 1;
																																																			end
																																																			if (v463 == 2) then
																																																				while true do
																																																					if (v464 == 0) then
																																																						local v488 = 0;
																																																						while true do
																																																							if (v488 == 1) then
																																																								v464 = 1;
																																																								break;
																																																							end
																																																							if (v488 == 0) then
																																																								v465 = v372[v462];
																																																								v466 = v465[1];
																																																								v488 = 1;
																																																							end
																																																						end
																																																					end
																																																					if (v464 == 1) then
																																																						v467 = v465[(848 - (423 + 422)) - 1];
																																																						if ((v466 == v196) and (v467 >= v237)) then
																																																							local v491 = 0;
																																																							local v492;
																																																							while true do
																																																								if (v491 == 0) then
																																																									v492 = 0;
																																																									while true do
																																																										if (0 == v492) then
																																																											v238[v467] = v466[v467];
																																																											v465[580 - (76 + 503)] = v238;
																																																											break;
																																																										end
																																																									end
																																																									break;
																																																								end
																																																							end
																																																						end
																																																						break;
																																																					end
																																																				end
																																																				break;
																																																			end
																																																			if (1 == v463) then
																																																				v466 = nil;
																																																				v467 = nil;
																																																				v463 = 2;
																																																			end
																																																		end
																																																	end
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v236 == 0) then
																																												local v360 = 0;
																																												while true do
																																													if (v360 == 1) then
																																														v236 = 1;
																																														break;
																																													end
																																													if (v360 == 0) then
																																														v237 = v198[2];
																																														v238 = {};
																																														v360 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v235 == 0) then
																																										v236 = 0;
																																										v237 = nil;
																																										v235 = 1;
																																									end
																																								end
																																							elseif (v199 == (46 - 32)) then
																																								v196[v198[2]] = v198[3 + 0];
																																							else
																																								v66[v198[5 - 2]] = v196[v198[9 - 7]];
																																							end
																																						elseif (v199 <= 16) then
																																							local v239 = 0;
																																							local v240;
																																							local v241;
																																							while true do
																																								if (v239 == 1) then
																																									while true do
																																										if (v240 == 0) then
																																											v241 = v198[(1118 - (1073 + 43)) + (0 - 0)];
																																											do
																																												return v21(v196, v241, v166);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v239 == 0) then
																																									v240 = 0;
																																									v241 = nil;
																																									v239 = 1;
																																								end
																																							end
																																						elseif (v199 == 17) then
																																							v196[v198[2]][v196[v198[11 - 8]]] = v198[4];
																																						else
																																							v196[v198[5 - 3]] = #v196[v198[3]];
																																						end
																																					elseif (v199 <= 21) then
																																						if (v199 <= (719 - ((1310 - 785) + 175))) then
																																							v196[v198[1 + 1]] = {};
																																						elseif (v199 > (11 + 9)) then
																																							do
																																								return;
																																							end
																																						else
																																							v196[v198[1 + 1]][v196[v198[13 - 10]]] = v196[v198[11 - 7]];
																																						end
																																					elseif (v199 <= (1911 - (834 + 1054))) then
																																						if (v199 == (16 + 6)) then
																																							if (v198[(1635 - (35 + 154)) - (552 + 795 + 97)] == v196[v198[4]]) then
																																								v165 = v165 + 1;
																																							else
																																								v165 = v198[14 - (1 + 10)];
																																							end
																																						else
																																							local v289 = 0;
																																							local v290;
																																							local v291;
																																							local v292;
																																							local v293;
																																							local v294;
																																							while true do
																																								if (v289 == 1) then
																																									v292 = nil;
																																									v293 = nil;
																																									v289 = 2;
																																								end
																																								if (v289 == 0) then
																																									v290 = 0;
																																									v291 = nil;
																																									v289 = 1;
																																								end
																																								if (2 == v289) then
																																									v294 = nil;
																																									while true do
																																										if (v290 == 0) then
																																											local v385 = 0;
																																											while true do
																																												if (v385 == 1) then
																																													v290 = 1;
																																													break;
																																												end
																																												if (v385 == 0) then
																																													v291 = v198[2];
																																													v292, v293 = v193(v196[v291](v196[v291 + (1830 - (669 + 1160))]));
																																													v385 = 1;
																																												end
																																											end
																																										end
																																										if (v290 == 1) then
																																											local v386 = 0;
																																											while true do
																																												if (1 == v386) then
																																													v290 = 2;
																																													break;
																																												end
																																												if (v386 == 0) then
																																													v166 = (v293 + v291) - (1 + 0);
																																													v294 = 1429 - (926 + 503);
																																													v386 = 1;
																																												end
																																											end
																																										end
																																										if (2 == v290) then
																																											for v407 = v291, v166 do
																																												local v408 = 0;
																																												local v409;
																																												while true do
																																													if (0 == v408) then
																																														v409 = 0;
																																														while true do
																																															if (v409 == 0) then
																																																v294 = v294 + 1 + 0;
																																																v196[v407] = v292[v294];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v199 == (4 + 20)) then
																																						v196[v198[2]] = v48(v191[v198[7 - 4]], nil, v66);
																																					else
																																						v196[v198[2]][v198[3]] = v198[(1562 - (240 + 1321)) + (4 - 1)];
																																					end
																																				elseif (v199 <= ((42 - 30) + 26)) then
																																					if (v199 <= ((1420 - (15 + 599)) - ((1152 - (422 + 439)) + 484))) then
																																						if (v199 <= ((233 - 103) - 102)) then
																																							if (v199 <= 26) then
																																								v196[v198[(52 - 36) - (5 + 9)]] = v66[v198[3 + 0]];
																																							elseif (v199 > ((3970 - 2345) - ((221 - 70) + 1447))) then
																																								local v298 = 0;
																																								local v299;
																																								local v300;
																																								local v301;
																																								local v302;
																																								local v303;
																																								while true do
																																									if (v298 == 2) then
																																										v303 = nil;
																																										while true do
																																											if (v299 == 0) then
																																												local v387 = 0;
																																												while true do
																																													if (v387 == 0) then
																																														v300 = v198[2];
																																														v301, v302 = v193(v196[v300](v21(v196, v300 + (747 - (126 + 620)), v198[654 - (534 + 117)])));
																																														v387 = 1;
																																													end
																																													if (v387 == 1) then
																																														v299 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v299 == 2) then
																																												for v410 = v300, v166 do
																																													local v411 = 0;
																																													local v412;
																																													while true do
																																														if (0 == v411) then
																																															v412 = 0;
																																															while true do
																																																if (v412 == 0) then
																																																	v303 = v303 + 1;
																																																	v196[v410] = v301[v303];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (1 == v299) then
																																												local v388 = 0;
																																												while true do
																																													if (v388 == 1) then
																																														v299 = 2;
																																														break;
																																													end
																																													if (v388 == 0) then
																																														v166 = (v302 + v300) - 1;
																																														v303 = 1288 - (777 + 511);
																																														v388 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v298 == 1) then
																																										v301 = nil;
																																										v302 = nil;
																																										v298 = 2;
																																									end
																																									if (v298 == 0) then
																																										v299 = 0;
																																										v300 = nil;
																																										v298 = 1;
																																									end
																																								end
																																							else
																																								local v304 = 0;
																																								local v305;
																																								local v306;
																																								while true do
																																									if (v304 == 1) then
																																										while true do
																																											if (v305 == 0) then
																																												v306 = v198[4 - (1 + 1)];
																																												v196[v306] = v196[v306](v21(v196, v306 + 1, v166));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v304 == 0) then
																																										v305 = 0;
																																										v306 = nil;
																																										v304 = 1;
																																									end
																																								end
																																							end
																																						elseif (v199 <= (1133 - (170 + 934))) then
																																							local v245 = 0;
																																							local v246;
																																							local v247;
																																							local v248;
																																							local v249;
																																							while true do
																																								if (v245 == 1) then
																																									v248 = nil;
																																									v249 = nil;
																																									v245 = 2;
																																								end
																																								if (v245 == 0) then
																																									v246 = 0;
																																									v247 = nil;
																																									v245 = 1;
																																								end
																																								if (v245 == 2) then
																																									while true do
																																										if (v246 == 1) then
																																											local v362 = 0;
																																											while true do
																																												if (v362 == 0) then
																																													v249 = v196[v247] + v248;
																																													v196[v247] = v249;
																																													v362 = 1;
																																												end
																																												if (v362 == 1) then
																																													v246 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v246 == 2) then
																																											if (v248 > (93 - (26 + 67))) then
																																												if (v249 <= v196[v247 + 1]) then
																																													local v424 = 0;
																																													local v425;
																																													while true do
																																														if (v424 == 0) then
																																															v425 = 0;
																																															while true do
																																																if (v425 == 0) then
																																																	v165 = v198[3];
																																																	v196[v247 + (8 - (5 + 0))] = v249;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																											elseif (v249 >= v196[v247 + 1]) then
																																												local v426 = 0;
																																												local v427;
																																												while true do
																																													if (v426 == 0) then
																																														v427 = 0;
																																														while true do
																																															if (v427 == 0) then
																																																v165 = v198[3];
																																																v196[v247 + 2 + 1] = v249;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v246 == 0) then
																																											local v363 = 0;
																																											while true do
																																												if (0 == v363) then
																																													v247 = v198[2 + 0];
																																													v248 = v196[v247 + (3 - 1)];
																																													v363 = 1;
																																												end
																																												if (v363 == 1) then
																																													v246 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v199 > (39 - 9)) then
																																							v196[v198[2 + 0]] = v196[v198[758 - (386 + 10 + (686 - (224 + 103)))]][v198[4]];
																																						else
																																							v196[v198[973 - (39 + 932)]] = v196[v198[11 - 8]] % v196[v198[4]];
																																						end
																																					elseif (v199 <= (50 - 16)) then
																																						if (v199 <= (54 - 22)) then
																																							local v250 = 0;
																																							local v251;
																																							local v252;
																																							local v253;
																																							local v254;
																																							local v255;
																																							while true do
																																								if (v250 == 1) then
																																									v253 = nil;
																																									v254 = nil;
																																									v250 = 2;
																																								end
																																								if (v250 == 0) then
																																									v251 = 0;
																																									v252 = nil;
																																									v250 = 1;
																																								end
																																								if (v250 == 2) then
																																									v255 = nil;
																																									while true do
																																										if (v251 == 2) then
																																											for v373 = v252, v166 do
																																												local v374 = 0;
																																												local v375;
																																												while true do
																																													if (v374 == 0) then
																																														v375 = 0;
																																														while true do
																																															if (0 == v375) then
																																																v255 = v255 + (1362 - (935 + 426));
																																																v196[v373] = v253[v255];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v251 == 1) then
																																											local v364 = 0;
																																											while true do
																																												if (0 == v364) then
																																													v166 = (v254 + v252) - (1 + 0);
																																													v255 = 0 - 0;
																																													v364 = 1;
																																												end
																																												if (1 == v364) then
																																													v251 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v251 == 0) then
																																											local v365 = 0;
																																											while true do
																																												if (v365 == 0) then
																																													v252 = v198[2 + 0];
																																													v253, v254 = v193(v196[v252](v21(v196, v252 + 1, v166)));
																																													v365 = 1;
																																												end
																																												if (v365 == 1) then
																																													v251 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v199 == 33) then
																																							v196[v198[2]] = v196[v198[4 - 1]] + v198[2 + 2];
																																						else
																																							local v311 = 0;
																																							local v312;
																																							local v313;
																																							while true do
																																								if (v311 == 0) then
																																									v312 = 0;
																																									v313 = nil;
																																									v311 = 1;
																																								end
																																								if (v311 == 1) then
																																									while true do
																																										if (v312 == 0) then
																																											v313 = v198[2 + 0 + 0 + 0];
																																											v196[v313](v21(v196, v313 + (1 - 0) + 0, v166));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v199 <= 36) then
																																						if (v199 == (70 - 35)) then
																																							local v314 = 0;
																																							local v315;
																																							local v316;
																																							local v317;
																																							local v318;
																																							while true do
																																								if (0 == v314) then
																																									v315 = 0;
																																									v316 = nil;
																																									v314 = 1;
																																								end
																																								if (1 == v314) then
																																									v317 = nil;
																																									v318 = nil;
																																									v314 = 2;
																																								end
																																								if (v314 == 2) then
																																									while true do
																																										if (v315 == 0) then
																																											local v392 = 0;
																																											while true do
																																												if (v392 == 0) then
																																													v316 = v191[v198[756 - (180 + 573)]];
																																													v317 = nil;
																																													v392 = 1;
																																												end
																																												if (v392 == 1) then
																																													v315 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v315 == 1) then
																																											local v393 = 0;
																																											while true do
																																												if (v393 == 0) then
																																													v318 = {};
																																													v317 = v18({}, {[v7("\39\38\160\122\136\209\0", "\120\121\201\20\236\180")]=function(v435, v436)
																																														local v448 = 0;
																																														local v449;
																																														local v450;
																																														while true do
																																															if (1 == v448) then
																																																while true do
																																																	if (v449 == 0) then
																																																		local v484 = 0;
																																																		while true do
																																																			if (0 == v484) then
																																																				v450 = v318[v436];
																																																				return v450[1][v450[1948 - (1444 + 502)]];
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																															if (v448 == 0) then
																																																v449 = 0;
																																																v450 = nil;
																																																v448 = 1;
																																															end
																																														end
																																													end,[v7("\119\115\89\38\146\90\115\76\73\79", "\40\44\55\67\229\51\29")]=function(v435, v436, v437)
																																														local v451 = 0;
																																														local v452;
																																														local v453;
																																														while true do
																																															if (v451 == 1) then
																																																while true do
																																																	if (v452 == 0) then
																																																		v453 = v318[v436];
																																																		v453[1 + 0][v453[3 - 1]] = v437;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																															if (v451 == 0) then
																																																v452 = 0;
																																																v453 = nil;
																																																v451 = 1;
																																															end
																																														end
																																													end});
																																													v393 = 1;
																																												end
																																												if (v393 == 1) then
																																													v315 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (2 == v315) then
																																											for v417 = (1 - 0) + 0, v198[4] do
																																												local v418 = 0;
																																												local v419;
																																												local v420;
																																												while true do
																																													if (v418 == 1) then
																																														while true do
																																															if (v419 == 0) then
																																																local v472 = 0;
																																																while true do
																																																	if (v472 == 0) then
																																																		v165 = v165 + (800 - ((1650 - (205 + 1135)) + (1260 - 771)));
																																																		v420 = v190[v165];
																																																		v472 = 1;
																																																	end
																																																	if (v472 == 1) then
																																																		v419 = 1;
																																																		break;
																																																	end
																																																end
																																															end
																																															if (v419 == 1) then
																																																if (v420[3 - 2] == (1511 - (1156 + (900 - 581)))) then
																																																	v318[v417 - 1] = {v196,v420[3]};
																																																else
																																																	v318[v417 - 1] = {v65,v420[133 - ((1396 - (1270 + 31)) + (1161 - (757 + 369)))]};
																																																end
																																																v195[#v195 + (2 - 1)] = v318;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																													if (v418 == 0) then
																																														v419 = 0;
																																														v420 = nil;
																																														v418 = 1;
																																													end
																																												end
																																											end
																																											v196[v198[2 + 0]] = v48(v316, v317, v66);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v196[v198[2]] = v196[v198[556 - (216 + 217 + 120)]];
																																						end
																																					elseif (v199 == 37) then
																																						v196[v198[2]] = v198[6 - 3] + v196[v198[4]];
																																					else
																																						v196[v198[(63 - (30 + 31)) + 0]] = v196[v198[809 - (11 + 795)]] - v196[v198[4]];
																																					end
																																				elseif (v199 <= (110 - (156 - 91))) then
																																					if (v199 <= 41) then
																																						if (v199 <= (1081 - (888 + 154))) then
																																							v196[v198[2]] = v196[v198[6 - 3]] / v198[1765 - (93 + (4306 - 2638))];
																																						elseif (v199 == ((186 - 101) - 45)) then
																																							v196[v198[(1 + 2) - (1221 - (1162 + 58))]] = v65[v198[1 + 2]];
																																						else
																																							v196[v198[2]][v198[5 - 2]] = v196[v198[4]];
																																						end
																																					elseif (v199 <= 43) then
																																						if (v199 > ((258 - 162) - 54)) then
																																							local v327 = 0;
																																							local v328;
																																							local v329;
																																							local v330;
																																							while true do
																																								if (0 == v327) then
																																									v328 = 0;
																																									v329 = nil;
																																									v327 = 1;
																																								end
																																								if (v327 == 1) then
																																									v330 = nil;
																																									while true do
																																										if (v328 == 0) then
																																											local v395 = 0;
																																											while true do
																																												if (v395 == 0) then
																																													v329 = v198[1187 - (947 + 238)];
																																													v330 = v196[v198[(5519 - 3856) - (1280 + 380)]];
																																													v395 = 1;
																																												end
																																												if (v395 == 1) then
																																													v328 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (1 == v328) then
																																											v196[v329 + 1] = v330;
																																											v196[v329] = v330[v198[4]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v196[v198[(2 + 0) - (0 - 0)]] = v196[v198[950 - (777 + 170)]] % v198[1568 - (1337 + 227)];
																																						end
																																					elseif (v199 > 44) then
																																						if v196[v198[3 - 1]] then
																																							v165 = v165 + ((201 + 1248) - ((2229 - (634 + 466)) + 319));
																																						else
																																							v165 = v198[309 - (270 + 36)];
																																						end
																																					else
																																						local v332 = 0;
																																						local v333;
																																						local v334;
																																						while true do
																																							if (1 == v332) then
																																								while true do
																																									if (0 == v333) then
																																										v334 = v198[2 - 0];
																																										do
																																											return v196[v334](v21(v196, v334 + 1, v198[2 + 1]));
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v332 == 0) then
																																								v333 = 0;
																																								v334 = nil;
																																								v332 = 1;
																																							end
																																						end
																																					end
																																				elseif (v199 <= ((136 - 70) - 18)) then
																																					if (v199 <= (142 - 96)) then
																																						v165 = v198[8 - 5];
																																					elseif (v199 == (88 - 41)) then
																																						v196[v198[110 - (38 + 70)]] = v196[v198[1480 - (1219 + 258)]][v196[v198[4]]];
																																					elseif not v196[v198[2]] then
																																						v165 = v165 + (1351 - (943 + 407));
																																					else
																																						v165 = v198[3];
																																					end
																																				elseif (v199 <= (33 + 17)) then
																																					if (v199 > ((3417 - 2663) - (621 + 84))) then
																																						local v337 = 0;
																																						local v338;
																																						local v339;
																																						local v340;
																																						local v341;
																																						local v342;
																																						local v343;
																																						while true do
																																							if (v337 == 0) then
																																								v338 = 0;
																																								v339 = nil;
																																								v337 = 1;
																																							end
																																							if (v337 == 3) then
																																								while true do
																																									if (v338 == 0) then
																																										local v400 = 0;
																																										while true do
																																											if (v400 == 0) then
																																												v339 = v198[2];
																																												v340 = v198[4];
																																												v400 = 1;
																																											end
																																											if (v400 == 1) then
																																												v338 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (v338 == 2) then
																																										local v401 = 0;
																																										while true do
																																											if (v401 == 1) then
																																												v338 = 3;
																																												break;
																																											end
																																											if (0 == v401) then
																																												for v454 = 1, v340 do
																																													v196[v341 + v454] = v342[v454];
																																												end
																																												v343 = v342[1 + 0];
																																												v401 = 1;
																																											end
																																										end
																																									end
																																									if (v338 == 1) then
																																										local v402 = 0;
																																										while true do
																																											if (v402 == 1) then
																																												v338 = 2;
																																												break;
																																											end
																																											if (0 == v402) then
																																												v341 = v339 + 2;
																																												v342 = {v196[v339](v196[v339 + 1], v196[v341])};
																																												v402 = 1;
																																											end
																																										end
																																									end
																																									if (3 == v338) then
																																										if v343 then
																																											local v428 = 0;
																																											local v429;
																																											while true do
																																												if (v428 == 0) then
																																													v429 = 0;
																																													while true do
																																														if (0 == v429) then
																																															v196[v341] = v343;
																																															v165 = v198[377 - (237 + 137)];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										else
																																											v165 = v165 + 1;
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v337 == 1) then
																																								v340 = nil;
																																								v341 = nil;
																																								v337 = 2;
																																							end
																																							if (v337 == 2) then
																																								v342 = nil;
																																								v343 = nil;
																																								v337 = 3;
																																							end
																																						end
																																					elseif (v196[v198[2 + 0]] == v196[v198[4 + 0]]) then
																																						v165 = v165 + (1578 - (369 + 426 + 782));
																																					else
																																						v165 = v198[1 + 2];
																																					end
																																				elseif (v199 == 51) then
																																					local v344 = 0;
																																					local v345;
																																					local v346;
																																					local v347;
																																					local v348;
																																					while true do
																																						if (v344 == 0) then
																																							v345 = 0;
																																							v346 = nil;
																																							v344 = 1;
																																						end
																																						if (v344 == 2) then
																																							while true do
																																								if (v345 == 0) then
																																									local v403 = 0;
																																									while true do
																																										if (0 == v403) then
																																											v346 = v198[2];
																																											v347 = {v196[v346](v21(v196, v346 + 1, v166))};
																																											v403 = 1;
																																										end
																																										if (v403 == 1) then
																																											v345 = 1;
																																											break;
																																										end
																																									end
																																								end
																																								if (v345 == 1) then
																																									v348 = 0;
																																									for v421 = v346, v198[(6086 - 4391) - (645 + 1046)] do
																																										local v422 = 0;
																																										local v423;
																																										while true do
																																											if (v422 == 0) then
																																												v423 = 0;
																																												while true do
																																													if (v423 == 0) then
																																														v348 = v348 + (1002 - (455 + 546));
																																														v196[v421] = v347[v348];
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v344 == 1) then
																																							v347 = nil;
																																							v348 = nil;
																																							v344 = 2;
																																						end
																																					end
																																				else
																																					local v349 = 0;
																																					local v350;
																																					local v351;
																																					while true do
																																						if (v349 == 1) then
																																							while true do
																																								if (v350 == 0) then
																																									v351 = v198[(568 - (526 + 39)) - 1];
																																									v196[v351](v21(v196, v351 + 1, v198[(514 + 119) - (74 + 216 + 340)]));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v349 == 0) then
																																							v350 = 0;
																																							v351 = nil;
																																							v349 = 1;
																																						end
																																					end
																																				end
																																				v165 = v165 + 1;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v189 == 2) then
																															v196 = {};
																															for v206 = 26 - ((68 - 43) + 1 + 0), v168 do
																																if (v206 >= v192) then
																																	v194[v206 - v192] = v167[v206 + 1];
																																else
																																	v196[v206] = v167[v206 + 1];
																																end
																															end
																															v197 = (v168 - v192) + 1 + 0;
																															v189 = 3;
																														end
																														if (v189 == 1) then
																															v193 = v46;
																															v194 = {};
																															v195 = {};
																															v189 = 2;
																														end
																													end
																												end;
																												v180 = 1;
																											end
																											if (v180 == 1) then
																												v164 = 3;
																												break;
																											end
																										end
																									end
																									if (v164 == 3) then
																										_G['A'], _G['B'] = v46(v19(v169));
																										if not _G['A'][(1180 - (387 + 792)) + (994 - (350 + 644))] then
																											local v186 = 0;
																											local v187;
																											local v188;
																											while true do
																												if (v186 == 0) then
																													v187 = 0;
																													v188 = nil;
																													v186 = 1;
																												end
																												if (v186 == 1) then
																													while true do
																														if (v187 == 0) then
																															v188 = v64[13 - 9][v165] or "?";
																															error(v7("\46\193\187\63\64\9\130\172\36\66\18\208\233\55\68\93\249", "\125\162\201\86\48") .. v188 .. v7("\241\28", "\172\38\47\198") .. _G['A'][2 + 0]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 2, _G['B']);
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (v163 == 0) then
																								v164 = 0;
																								v165 = nil;
																								v163 = 1;
																							end
																							if (v163 == 2) then
																								v168 = nil;
																								v169 = nil;
																								v163 = 3;
																							end
																						end
																					end;
																				end
																			end
																		end
																		if (v101 == 0) then
																			local v140 = 0;
																			while true do
																				if (v140 == 1) then
																					v101 = 1;
																					break;
																				end
																				if (v140 == 0) then
																					v102 = v64[1223 - (227 + 995)];
																					v103 = v64[2];
																					v140 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v100 == 1) then
															v103 = nil;
															v104 = nil;
															v100 = 2;
														end
													end
												end;
												v58 = 1;
											end
										end
									end
									v51 = 2;
								end
							end
						end
						break;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 2) then
			v7 = function(v27, v28)
				local v49 = 0;
				local v50;
				while true do
					if (1 == v49) then
						return v5(v50);
					end
					if (0 == v49) then
						v50 = {};
						for v52 = 1, #v27 do
							v6(v50, v0(v4(v1(v2(v27, v52, v52 + 1)), v1(v2(v28, 1 + ((v52 - 1) % #v28), 1 + ((v52 - 1) % #v28) + 1))) % 256));
						end
						v49 = 1;
					end
				end
			end;
			v8 = _G[v7("\176\208\5\176\169\221\14\183", "\196\191\107\197")];
			v9 = _G[v7("\21\44\83\175\175\241", "\102\88\33\198\193\150\57")][v7("\114\39\31\90", "\16\94\107\63\198\127\126\30")];
			v10 = _G[v7("\94\21\42\73\23\17", "\45\97\88\32\121\118\231")][v7("\42\236\88\42", "\73\132\57\88\79")];
			v24 = 3;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v3 = bit32 or bit;
			v24 = 1;
		end
		if (v24 == 5) then
			v19 = _G[v7("\0\143\216\29\116", "\112\236\185\113\24\211\67\33")];
			v20 = _G[v7("\219\116\116\114\137\243", "\168\17\24\23\234\135")];
			v21 = _G[v7("\185\114\16\25\74\167", "\204\28\96\120\41")] or _G[v7("\102\219\32\225\191", "\18\186\66\141\218\38\39\228")][v7("\4\136\255\191\36\252", "\113\230\143\222\71\151\166")];
			v22 = _G[v7("\215\188\34\187\128\178\238\209", "\163\211\76\206\237\208\139")];
			v24 = 6;
		end
		if (v24 == 1) then
			v4 = v3.bxor;
			v5 = table.concat;
			v6 = table.insert;
			v7 = nil;
			v24 = 2;
		end
		if (v24 == 3) then
			v11 = _G[v7("\88\233\19\243\69\250", "\43\157\97\154")][v7("\39\55\203", "\84\66\169\135")];
			v12 = _G[v7("\8\54\147\218\21\37", "\123\66\225\179")][v7("\34\51\110\225", "\69\64\27\131")];
			v13 = _G[v7("\232\13\92\52\66\214", "\155\121\46\93\44\177\128")][v7("\220\201\176", "\174\172\192\217\18\135")];
			v14 = _G[v7("\232\230\176\123\218", "\156\135\210\23\191\84")][v7("\81\66\172\252\203\85", "\50\45\194\159\170\33")];
			v24 = 4;
		end
		if (v24 == 4) then
			v15 = _G[v7("\242\192\21\177\123", "\134\161\119\221\30\29\96\46")][v7("\182\127\218\220\173\101", "\223\17\169\185")];
			v16 = _G[v7("\245\61\2\124", "\152\92\118\20\154\195\143")][v7("\41\9\3\250\25", "\69\109\102\130\105")];
			v17 = _G[v7("\41\84\32\52\41\167\59", "\78\49\84\82\76\201\77")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\223\179\104\73\35\158\164\70\205\180\112\65", "\172\214\28\36\70\234\197\50")];
			v24 = 5;
		end
	end
end
